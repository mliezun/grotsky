name: release

on:
  push:
    branches:
      - v0.*

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.85.0
          override: true
          components: rustfmt, clippy

      - name: Build release binary
        run: cargo build --release

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: grotsky-rs-linux-x86_64
          path: target/release/grotsky-rs

  build-macos:
    name: Build on macOS (Apple Silicon target)
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install latest stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.85.0
        override: true
        components: rustfmt, clippy

    - name: Build release binary
      run: cargo build --release --target=aarch64-apple-darwin

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: grotsky-rs-macos-aarch64
        path: target/aarch64-apple-darwin/release/grotsky-rs

  release:
    name: Release binaries
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download binary linux
        uses: actions/download-artifact@v4
        with:
          name: grotsky-rs-linux-x86_64
          path: ./release-assets

      - name: Download binary macos
        uses: actions/download-artifact@v4
        with:
          name: grotsky-rs-macos-aarch64
          path: ./release-assets
      
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Create tar.gz for Linux
        run: |
          cd ./release-assets
          tar -czvf grotsky-${{ steps.extract_branch.outputs.branch }}-linux-x86_64.tar.gz grotsky-rs
          mv grotsky-${{ steps.extract_branch.outputs.branch }}-linux-x86_64.tar.gz ../
          cd ..
      - name: Create tar.gz for macOS
        run: |
          cd ./release-assets
          tar -czvf grotsky-${{ steps.extract_branch.outputs.branch }}-macos-aarch64.tar.gz grotsky-rs
          mv grotsky-${{ steps.extract_branch.outputs.branch }}-macos-aarch64.tar.gz ../
          cd ..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_branch.outputs.branch }}
          release_name: Release ${{ steps.extract_branch.outputs.branch }}
          body: |
            Automated Release
          draft: false
          prerelease: false

      - name: Upload Release Linux
        id: upload-release-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./grotsky-${{ steps.extract_branch.outputs.branch }}-linux-x86_64.tar.gz
          asset_name: grotsky-${{ steps.extract_branch.outputs.branch }}-linux-x86_64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release macos arm64
        id: upload-release-macos-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./grotsky-${{ steps.extract_branch.outputs.branch }}-macos-aarch64.tar.gz
          asset_name: grotsky-${{ steps.extract_branch.outputs.branch }}-macos-aarch64.tar.gz
          asset_content_type: application/gzip
